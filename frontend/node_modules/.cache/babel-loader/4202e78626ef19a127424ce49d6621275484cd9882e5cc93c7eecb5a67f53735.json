{"ast":null,"code":"function o(f) {\n  return r => {\n    f.forEach(n => {\n      typeof n == \"function\" ? n(r) : n != null && (n.current = r);\n    });\n  };\n}\nexport { o as mergeRefs };","map":{"version":3,"mappings":"AAAO,SAASA;EAAA,OAAYC,CAAC;IAAAC,SAAY,CAACC;MAAA,OAAWA,CAAC,cAAU,eAAW,IAAI,KAAEA,CAAE,QAAQ,GAACF;IAAA;EAAA;AAAA;AAAA,SAAWD,CAAC,IAACI","names":["o","r","f","n","mergeRefs"],"sources":["/home/ravi/npciV4/IGC-NPCI-HACKATHON/frontend/node_modules/react-merge-refs/src/index.tsx"],"sourcesContent":["import type * as React from \"react\";\n\nexport function mergeRefs<T = any>(\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T>>\n): React.RefCallback<T> {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}