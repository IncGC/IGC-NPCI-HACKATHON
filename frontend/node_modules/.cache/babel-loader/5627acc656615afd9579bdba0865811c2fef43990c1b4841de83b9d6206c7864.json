{"ast":null,"code":"import endPoints from \"../utils/endPoints\";\nimport sendApiReq from \"../utils/sendApiReq\";\nexport async function getInvestorLists(onSuccess) {\n  try {\n    const res = await sendApiReq({});\n    console.log(\"investors List\");\n    console.log(res);\n    onSuccess(res.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getUserDetails(mbeId, onSuccess) {\n  try {\n    const res = await sendApiReq({\n      url: `${endPoints.userDetail}?mbeId=${mbeId}`\n    });\n    console.log(res);\n    // onSuccess(res)\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getBondholding(data, onSuccess) {\n  try {\n    console.log(data);\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchTokenHoldings,\n      params: data\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getTokenHoldings(data, onSuccess) {\n  try {\n    console.log(data);\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchTokenHoldings,\n      params: data\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getTransactions(data, onSuccess) {\n  try {\n    console.log(data);\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.transactions\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getPurchaseLog(onSuccess) {\n  try {\n    const res = await sendApiReq({\n      method: \"get\",\n      url: endPoints.purchaseLog\n    });\n    console.log(res);\n    if (res.status === 200) onSuccess(res.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getMarket(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchMarket\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function fetchAllUserSellTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchAllUserSellTransactions\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function fetchAllUserBuyTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchAllUserBuyTransactions\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function fetchSingleUserSellTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchSingleUserSellTransactions\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function fetchSingleUserBuyTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchSingleUserBuyTransactions\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}","map":{"version":3,"names":["endPoints","sendApiReq","getInvestorLists","onSuccess","res","console","log","message","error","getUserDetails","mbeId","url","userDetail","getBondholding","data","payload","method","fetchTokenHoldings","params","status","getTokenHoldings","getTransactions","transactions","getPurchaseLog","purchaseLog","getMarket","fetchMarket","fetchAllUserSellTransactions","fetchAllUserBuyTransactions","fetchSingleUserSellTransactions","fetchSingleUserBuyTransactions"],"sources":["/home/ravi/npciV4/IGC-NPCI-HACKATHON/frontend/src/apis/custodianApis.js"],"sourcesContent":["import endPoints from \"../utils/endPoints\";\nimport sendApiReq from \"../utils/sendApiReq\";\n\nexport async function getInvestorLists(onSuccess) {\n  try {\n    const res = await sendApiReq({})\n    console.log(\"investors List\")\n    console.log(res)\n    onSuccess(res.message)\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function getUserDetails(mbeId, onSuccess) {\n  try {\n    const res = await sendApiReq({\n      url: `${endPoints.userDetail}?mbeId=${mbeId}`,\n    })\n\n    console.log(res)\n    // onSuccess(res)\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function getBondholding(data, onSuccess) {\n  try {\n    console.log(data);\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchTokenHoldings,\n      params: data\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function getTokenHoldings(data, onSuccess) {\n  try {\n    console.log(data);\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchTokenHoldings,\n      params: data\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function getTransactions(data, onSuccess) {\n  try {\n    console.log(data);\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.transactions,\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function getPurchaseLog(onSuccess) {\n  try {\n    const res = await sendApiReq({\n      method: \"get\",\n      url: endPoints.purchaseLog,\n    })\n\n    console.log(res)\n    if (res.status === 200)\n      onSuccess(res.message)\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function getMarket(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchMarket,\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function fetchAllUserSellTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchAllUserSellTransactions,\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function fetchAllUserBuyTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchAllUserBuyTransactions,\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function fetchSingleUserSellTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchSingleUserSellTransactions,\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function fetchSingleUserBuyTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      method: 'get',\n      url: endPoints.fetchSingleUserBuyTransactions,\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}